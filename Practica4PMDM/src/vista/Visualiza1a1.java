/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package vista;

import controlador.ESaldoNoValido;
import controlador.GestionFicheros;
import controlador.Lista;
import controlador.Nodo;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import modelo.*;

/**
 *
 * @author Pernas
 */
public class Visualiza1a1 extends javax.swing.JPanel {

    private Lista listaNodo;
    private int posicion;
    // DecimalFormat dc = new DecimalFormat("0.00");
    
    /** Creates new form NuevaCuenta */
    public Visualiza1a1(Lista listanodo) {
        initComponents();
        listaNodo = listanodo;
        camposNoEditables();
        posicion = 0;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitular = new javax.swing.JLabel();
        jLabelSaldoActual = new javax.swing.JLabel();
        jLabelSaldoMinimo = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabelTipo1 = new javax.swing.JLabel();
        jLabelTipo2 = new javax.swing.JLabel();
        jTextFieldTitular = new javax.swing.JTextField();
        jTextFieldSaldoActual = new javax.swing.JTextField();
        jTextFieldSaldoMinimo = new javax.swing.JTextField();
        jTextFieldFecha = new javax.swing.JTextField();
        jTextFieldTipo1 = new javax.swing.JTextField();
        jTextFieldTipo2 = new javax.swing.JTextField();
        jButtonAnterior = new javax.swing.JButton();
        jButtonSiguiente = new javax.swing.JButton();
        jButtonCalcular = new javax.swing.JButton();
        jLabelNumeroCuenta = new javax.swing.JLabel();
        jTextFieldNumeroCuenta = new javax.swing.JTextField();

        jLabelTitular.setText("Titular");

        jLabelSaldoActual.setText("Saldo actual");

        jLabelSaldoMinimo.setText("Saldo Minimo");

        jLabelFecha.setText("Fecha");

        jLabelTipo1.setText("Tipo 1");

        jLabelTipo2.setText("Tipo 2");

        jButtonAnterior.setText("Anterior");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonSiguiente.setText("Siguiente");
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });

        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        jLabelNumeroCuenta.setText("Numero Cuenta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButtonCalcular)
                        .addGap(159, 159, 159))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTipo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSaldoMinimo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldSaldoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSaldoActual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldSaldoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelTipo2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jButtonAnterior)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonSiguiente)
                                    .addComponent(jTextFieldTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelTitular)
                                    .addComponent(jLabelNumeroCuenta))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldTitular, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNumeroCuenta))))
                        .addGap(62, 62, 62))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumeroCuenta)
                    .addComponent(jTextFieldNumeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitular)
                    .addComponent(jTextFieldTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSaldoActual)
                    .addComponent(jTextFieldSaldoActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSaldoMinimo)
                    .addComponent(jTextFieldSaldoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFecha)
                    .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo1)
                    .addComponent(jTextFieldTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo2)
                    .addComponent(jTextFieldTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonSiguiente))
                .addGap(18, 18, 18)
                .addComponent(jButtonCalcular)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        posicion--;
        comprobarBotones();
        mostrarCuenta();
        modificaLabels();
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        posicion++;
        comprobarBotones();
        mostrarCuenta();
        modificaLabels();
    }//GEN-LAST:event_jButtonSiguienteActionPerformed

    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
                                         
        Nodo nodo = listaNodo.getArrayNodos()[posicion];
        long meses;
        if (nodo.getTypo() instanceof CuentaAhorro) {
            CuentaAhorro ahorro = (CuentaAhorro) nodo.getTypo();
            meses = diasTranscurridos(ahorro.getFecha()) / 30;
            ahorro.setSaldo(((ahorro.getSaldo() * ahorro.getInteresMensual()) * meses) + ahorro.getSaldo());

            try {
                calculaExcecion(ahorro.getSaldo(), ahorro.getSaldoMinimo());
                jTextFieldSaldoActual.setText(String.valueOf(ahorro.getSaldo()));
                listaNodo.getArrayNodos()[posicion].setTypo(ahorro);
            } catch (ESaldoNoValido e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        } else if (nodo.getTypo() instanceof CuentaCorriente) {
            CuentaCorriente corriente = (CuentaCorriente) nodo.getTypo();
            meses = diasTranscurridos(corriente.getFecha()) / 30;
            if(corriente.getTipoComision().equalsIgnoreCase("semestral")){
                corriente.setSaldo(corriente.getSaldo() - ((corriente.getSaldo() * corriente.getComisionMantenimiento()) * meses / 6));
            }else{
                corriente.setSaldo(corriente.getSaldo() - ((corriente.getSaldo() * corriente.getComisionMantenimiento()) * meses / 12));
            }
            try {
                calculaExcecion(corriente.getSaldo(), corriente.getSaldoMinimo());
                jTextFieldSaldoActual.setText(String.valueOf(corriente.getSaldo()));
                listaNodo.getArrayNodos()[posicion].setTypo(corriente);
            } catch (ESaldoNoValido e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        } else {
            CuentaInversion inversion = (CuentaInversion) nodo.getTypo();
            meses = diasTranscurridos(inversion.getFecha()) / 30;
            inversion.setSaldo(((inversion.getSaldo() * inversion.getBeneficio()) * meses / 3) + inversion.getSaldo());
            try {
                calculaExcecion(inversion.getSaldo(), inversion.getSaldoMinimo());
                jTextFieldSaldoActual.setText(String.valueOf(inversion.getSaldo()));
                listaNodo.getArrayNodos()[posicion].setTypo(inversion);
            } catch (ESaldoNoValido e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonCalcularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelNumeroCuenta;
    private javax.swing.JLabel jLabelSaldoActual;
    private javax.swing.JLabel jLabelSaldoMinimo;
    private javax.swing.JLabel jLabelTipo1;
    private javax.swing.JLabel jLabelTipo2;
    private javax.swing.JLabel jLabelTitular;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldNumeroCuenta;
    private javax.swing.JTextField jTextFieldSaldoActual;
    private javax.swing.JTextField jTextFieldSaldoMinimo;
    private javax.swing.JTextField jTextFieldTipo1;
    private javax.swing.JTextField jTextFieldTipo2;
    private javax.swing.JTextField jTextFieldTitular;
    // End of variables declaration//GEN-END:variables

    private void camposNoEditables() {
        // Inicialmente los botones calcular estara deshabilitado
        jButtonCalcular.setEnabled(false);
        
        jTextFieldFecha.setEditable(false);
        jTextFieldNumeroCuenta.setEditable(false);
        jTextFieldSaldoActual.setEditable(false);
        jTextFieldSaldoMinimo.setEditable(false);
        jTextFieldTipo1.setEditable(false);
        jTextFieldTipo2.setEditable(false);
        jTextFieldTitular.setEditable(false);
    }

    public void modificaLabels() {
        
        if(listaNodo.getArrayNodos()[posicion].getTypo() instanceof CuentaAhorro) {
            jLabelTipo1.setText("Interes Mensual");
            jLabelTipo2.setText("Bloqueada");
        } else if(listaNodo.getArrayNodos()[posicion].getTypo() instanceof CuentaCorriente) {
            jLabelTipo1.setText("Comision mantenimiento");
            jLabelTipo2.setText("Tipo comision");
        }else{
            jLabelTipo1.setText("Beneficio/Pérdida");
            jLabelTipo2.setText("Total invertido");
        }
    }

    public void mostrarCuenta() {
        Nodo nodo = listaNodo.getArrayNodos()[posicion];
        // Mensaje de control,
        System.out.println(nodo.getTypo().toString());
        Cuenta c = (Cuenta)nodo.getTypo();
        
        jTextFieldFecha.setText(GestionFicheros.formateaFecha(c.getFecha()));
        jTextFieldNumeroCuenta.setText(c.getNumero()+"");
//        jTextFieldSaldoActual.setText(dc.format(c.getSaldo())+"");
        jTextFieldSaldoActual.setText(c.getSaldo()+"");
//        jTextFieldSaldoMinimo.setText(dc.format(c.getSaldoMinimo())+"");
        jTextFieldSaldoMinimo.setText(c.getSaldoMinimo()+"");
        jTextFieldTitular.setText(c.getTitular());
        
        if (c instanceof CuentaAhorro) {
            CuentaAhorro cuenta = (CuentaAhorro) c;
//            jTextFieldTipo1.setText(dc.format(cuenta.getInteresMensual())+"");
            jTextFieldTipo1.setText(cuenta.getInteresMensual()+"");
            jTextFieldTipo2.setText(cuenta.isBloqueada()+"");
            
            jButtonCalcular.setEnabled(diasTranscurridos(c.getFecha()) > 30);
        } else {
            if (c instanceof CuentaCorriente) {
                CuentaCorriente cuenta = (CuentaCorriente) c;
//                jTextFieldTipo1.setText(dc.format(cuenta.getComisionMantenimiento())+"");
                jTextFieldTipo1.setText(cuenta.getComisionMantenimiento()+"");
                jTextFieldTipo2.setText(cuenta.getTipoComision());
                jButtonCalcular.setEnabled(diasTranscurridos(c.getFecha()) > 180);

            } else {
                if(c instanceof CuentaInversion){
                    CuentaInversion cuenta = (CuentaInversion) c;
//                    jTextFieldTipo1.setText(dc.format(cuenta.getBeneficio())+"");
                    jTextFieldTipo1.setText(cuenta.getBeneficio()+"");
                    jTextFieldTipo2.setText(cuenta.getTotalInvertido()+"");
                    jButtonCalcular.setEnabled(diasTranscurridos(c.getFecha()) > 90);
                }
            }
        }
    }

    public void comprobarBotones() {
        if (posicion == 0)
            jButtonAnterior.setEnabled(false);
        else
            jButtonAnterior.setEnabled(true);
        
        if (listaNodo.getArrayNodos()[posicion+1] == null)
            jButtonSiguiente.setEnabled(false);
        else
            jButtonSiguiente.setEnabled(true);
    }
    
    public static long diasTranscurridos(Calendar fechaCuenta) {
        long end = fechaCuenta.getTimeInMillis();
        long start = Calendar.getInstance().getTimeInMillis();
        return TimeUnit.MILLISECONDS.toDays(Math.abs(end - start));
    }

    private void calculaExcecion(double f1, double f2) throws ESaldoNoValido{
        if(f1 < f2)
        {
            System.out.println("hola111");
            throw new ESaldoNoValido("El saldo no puede ser menor que saldoMinimo");
        }
    }
    
}
